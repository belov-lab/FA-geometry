diff --git a/analysis/fatty_acids/fa_volume_compare.py b/analysis/fatty_acids/fa_volume_compare.py
new file mode 100644
index 0000000..cc4f730
--- /dev/null
+++ b/analysis/fatty_acids/fa_volume_compare.py
@@ -0,0 +1,159 @@
+
+"""
+Fatty acid size/volume comparison
+- Builds ETKDG ensembles (RDKit), MMFF minimizes
+- Computes L/W/T, EndToEnd, Rg, NPR1/NPR2
+- Approximates VDW union volume and SAS (probe=1.4 Ã…) volume via voxel grid
+Usage:
+  conda install -c conda-forge rdkit numpy pandas
+  python fa_volume_compare.py > run.log
+Outputs:
+  fatty_acid_ensemble_metrics_with_volumes.csv
+  fatty_acid_ensemble_summaries_with_volumes.csv
+"""
+import numpy as np, pandas as pd
+from rdkit import Chem
+from rdkit.Chem import AllChem
+from rdkit.Chem.rdMolTransforms import ComputePrincipalAxesAndMoments
+
+PT = Chem.GetPeriodicTable()
+
+def radius_of_gyration(mol, confId, include_h=True):
+    conf = mol.GetConformer(confId)
+    idxs = range(mol.GetNumAtoms()) if include_h else [i for i in range(mol.GetNumAtoms()) if mol.GetAtomWithIdx(i).GetAtomicNum()!=1]
+    masses = np.array([PT.GetAtomicWeight(mol.GetAtomWithIdx(i).GetAtomicNum()) for i in idxs], float)
+    coords = np.array([conf.GetAtomPosition(i) for i in idxs], float)
+    com = np.average(coords, axis=0, weights=masses)
+    rg2 = np.average(((coords - com)**2).sum(axis=1), weights=masses)
+    return float(np.sqrt(rg2))
+
+def principal_extents(mol, confId):
+    conf = mol.GetConformer(confId)
+    axes, _ = ComputePrincipalAxesAndMoments(conf, ignoreHs=True)
+    A = np.array(axes)
+    coords = np.array([conf.GetAtomPosition(i) for i in range(mol.GetNumAtoms())
+                       if mol.GetAtomWithIdx(i).GetAtomicNum()!=1], float)
+    proj = coords @ A.T
+    L,W,T = (proj[:,k].max()-proj[:,k].min() for k in range(3))
+    return float(L), float(W), float(T)
+
+def end_to_end(mol, confId):
+    conf = mol.GetConformer(confId)
+    c0 = None
+    for a in mol.GetAtoms():
+        if a.GetAtomicNum()!=6: continue
+        if any(n.GetAtomicNum()==8 and mol.GetBondBetweenAtoms(a.GetIdx(), n.GetIdx()).GetBondTypeAsDouble()==2.0
+               for n in a.GetNeighbors()):
+            c0 = a.GetIdx(); break
+    if c0 is None: c0 = 0
+    p0 = np.array(conf.GetAtomPosition(c0))
+    terms = [a.GetIdx() for a in mol.GetAtoms()
+             if a.GetAtomicNum()==6 and a.GetDegree()==1 and
+                not any(n.GetAtomicNum()==8 for n in a.GetNeighbors())]
+    if not terms:
+        carbons = [a.GetIdx() for a in mol.GetAtoms() if a.GetAtomicNum()==6]
+        terms = carbons
+    far = max(terms, key=lambda i: np.linalg.norm(np.array(conf.GetAtomPosition(i))-p0))
+    p1 = np.array(conf.GetAtomPosition(far))
+    return float(np.linalg.norm(p1-p0))
+
+def npr_pmi(mol, confId):
+    conf = mol.GetConformer(confId)
+    _, moments = ComputePrincipalAxesAndMoments(conf, ignoreHs=True)
+    I = sorted(list(moments))
+    I1, I2, I3 = I[0], I[1], I[2]
+    npr1 = float(I1 / I3) if I3 != 0 else 0.0
+    npr2 = float(I2 / I3) if I3 != 0 else 0.0
+    return float(I1), float(I2), float(I3), npr1, npr2
+
+def grid_union_volume(coords, radii, grid=0.5, margin=1.0):
+    coords = np.asarray(coords, float)
+    radii = np.asarray(radii, float)
+    mins = coords.min(axis=0) - (radii.max() + margin)
+    maxs = coords.max(axis=0) + (radii.max() + margin)
+    xs = np.arange(mins[0], maxs[0] + grid*0.5, grid)
+    ys = np.arange(mins[1], maxs[1] + grid*0.5, grid)
+    zs = np.arange(mins[2], maxs[2] + grid*0.5, grid)
+    vol_voxel = grid**3
+    nx, ny = len(xs), len(ys)
+    occ_count = 0
+    for z in zs:
+        plane = np.zeros((nx, ny), dtype=bool)
+        for (x0,y0,z0), r in zip(coords, radii):
+            dz2 = (z - z0)**2
+            if dz2 > r*r: 
+                continue
+            dx2 = (xs - x0)**2
+            dy2 = (ys - y0)**2
+            mask = (dx2[:,None] + dy2[None,:] + dz2) <= (r*r)
+            plane |= mask
+            if plane.all():
+                break
+        occ_count += int(plane.sum())
+    return float(occ_count * vol_voxel)
+
+def compute_volumes(mol, confId, probe=1.4, grid=0.5):
+    conf = mol.GetConformer(confId)
+    coords = np.array([conf.GetAtomPosition(i) for i in range(mol.GetNumAtoms())], float)
+    radii_vdw = np.array([PT.GetRvdw(mol.GetAtomWithIdx(i).GetAtomicNum()) for i in range(mol.GetNumAtoms())], float)
+    V_vdw = grid_union_volume(coords, radii_vdw, grid=grid)
+    V_sas = grid_union_volume(coords, radii_vdw + probe, grid=grid)
+    return V_vdw, V_sas
+
+def build_and_measure(name, smi, nconf=12, prune=0.75, T=298.15, grid=0.5, probe=1.4):
+    mol = Chem.MolFromSmiles(smi)
+    if mol is None:
+        raise ValueError(f"SMILES parse failed for {name}: {smi}")
+    mol = Chem.AddHs(mol)
+    params = AllChem.ETKDGv3(); params.pruneRmsThresh = prune; params.randomSeed = 0xFEED5
+    ids = AllChem.EmbedMultipleConfs(mol, numConfs=nconf, params=params)
+    if len(ids)==0:
+        raise RuntimeError(f"Conformer embedding failed for {name}")
+    opt = AllChem.MMFFOptimizeMoleculeConfs(mol, maxIters=100)
+    E = np.array([e for ok,e in opt], float)
+    rows = []
+    for cid in ids:
+        I1,I2,I3,NPR1,NPR2 = npr_pmi(mol, cid)
+        L,W,T = principal_extents(mol, cid)
+        Rg = radius_of_gyration(mol, cid, include_h=True)
+        V_vdw, V_sas = compute_volumes(mol, cid, probe=probe, grid=grid)
+        rows.append(dict(
+            name=name, conf=int(cid), E=float(E[cid]),
+            L=L, W=W, T=T, EndToEnd=end_to_end(mol, cid),
+            Rg=Rg, NPR1=NPR1, NPR2=NPR2,
+            V_vdw=V_vdw, V_sas_p1p4=V_sas
+        ))
+    df = pd.DataFrame(rows).sort_values("E").reset_index(drop=True)
+    kT = 0.0019872041*T
+    w = np.exp(-(df.E - df.E.min())/kT); w = (w/w.sum()).to_numpy()
+    def agg(col):
+        arr = df[col].to_numpy()
+        mu = float(np.average(arr, weights=w))
+        sd = float(np.sqrt(np.average((arr-mu)**2, weights=w)))
+        return mu, sd
+    summary = {"name":name}
+    for k in ["L","W","T","EndToEnd","Rg","NPR1","NPR2","V_vdw","V_sas_p1p4"]:
+        mu,sd = agg(k); summary[f"{k}_mean"]=mu; summary[f"{k}_sd"]=sd
+    return df, pd.Series(summary)
+
+if __name__ == "__main__":
+    SMILES_INPUT = [
+        ("S1 C18:0", "CCCCCCCCCCCCCCCCCC(=O)O"),
+        ("S2", "CCCCCCCC/C=C\\CCCCCCCC(O)=O"),
+        ("S3", "CCCCC/C=C\\C/C=C\\CCCCCCCC(=O)O"),
+        ("S4", "CC/C=C\\C/C=C\\C/C=C\\CCCCCCCC(=O)O"),
+        ("S5", "CCCCC/C=C\\C/C=C\\C/C=C\\CCCCC(=O)O"),
+        ("S6", "CCCC/C=C/C=C/C=C\\CCCCCCCC(O)=O"),
+        ("S7", "CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O"),
+        ("S8", "CCCC/C=C\\C=C\\C=C/CCCCCCCC(O)=O"),
+        ("S9", "CCCC/C=C\\C=C\\C=C/CCCCCCCC(O)=O"),
+    ]
+    all_rows, summaries = [], []
+    for name, smi in SMILES_INPUT:
+        df, summ = build_and_measure(name, smi, nconf=12, grid=0.5, probe=1.4)
+        df["name"]=name; all_rows.append(df); summaries.append(summ)
+    df_all = pd.concat(all_rows).reset_index(drop=True)
+    summary_df = pd.DataFrame(summaries)
+    df_all.to_csv("fatty_acid_ensemble_metrics_with_volumes.csv", index=False)
+    summary_df.to_csv("fatty_acid_ensemble_summaries_with_volumes.csv", index=False)
+    print("Wrote fatty_acid_ensemble_metrics_with_volumes.csv and fatty_acid_ensemble_summaries_with_volumes.csv")

diff --git a/analysis/fatty_acids/fatty_acid_ensemble_metrics_with_volumes.csv b/analysis/fatty_acids/fatty_acid_ensemble_metrics_with_volumes.csv
new file mode 100644
index 0000000..3d598c6
--- /dev/null
+++ b/analysis/fatty_acids/fatty_acid_ensemble_metrics_with_volumes.csv
@@ -0,0 +1,108 @@
+name,smiles,conf,E,L,W,T,EndToEnd,Rg,NPR1,NPR2,V_vdw,V_sas_p1p4
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,7,-24.93166274184836,13.342470782514011,6.209749644610512,3.3862282714967598,12.358958831003992,4.983080125856228,0.1892180540739896,0.8944761586745771,324.625,1060.5
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,5,-24.88070998968009,17.94499321773484,4.107755518202755,2.76099854396879,17.136675001063356,5.712569842212931,0.0569330681441827,0.9721212060941576,325.875,1066.25
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,3,-23.61712133349495,17.389732059017728,4.857660962058371,4.580133005683279,16.844220384440458,5.851510914854789,0.0752405462133782,0.9714428659971884,320.875,1083.125
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,0,-22.165340597598863,16.487881324985956,5.090999724915953,2.8833799343046342,16.257867006944814,5.74815581008862,0.0757444467058263,0.9649010680598786,325.25,1072.5
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,1,-21.86774657067528,18.168718133567264,2.912548631563041,3.013107090714065,17.033651551990353,5.677877090360687,0.044995948656275,0.9983986449191288,324.625,1058.625
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,6,-21.86773682019205,14.529266739240365,5.582897371474202,5.088707410225241,13.3192398962953,5.207915809380823,0.1953677652361172,0.8484504058564548,323.75,1069.875
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,8,-21.47410842966716,16.08492632018358,4.120346730833071,3.145760280391277,16.04609567019527,5.624627011345284,0.0805288566002584,0.9739359308250533,323.125,1068.75
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,11,-21.059876197167704,14.572053495456204,5.272868374116074,3.0872500845370974,13.682066523249205,5.194045172953334,0.1088571883507865,0.9309674403096616,326.125,1055.625
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,4,-20.56508130857255,13.89157857670954,4.265430409820837,4.28179881579298,13.184402705159869,5.106920336557228,0.104476402975729,0.952994962414451,323.625,1045.125
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,10,-18.24308071856205,15.040631439050276,4.637705330004337,4.023101318903288,14.536186207196836,5.328048459253633,0.086106132848636,0.988566628254832,323.875,1056.0
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,2,-18.16975684553172,17.251509284247295,3.5863631372109754,2.805953232342035,16.091071569193396,5.768216480490374,0.0433843642050813,0.9801690526538228,325.375,1063.0
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,9,-17.708868929784995,13.268294464828209,5.046376562314337,3.942788007139539,12.108550046855562,4.996406262165494,0.0966291261105972,0.959401497218826,324.5,1036.125
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,2,-18.12015636342532,17.991834460496474,3.911490178336616,2.299929613846894,17.199152818514513,5.995570042049456,0.0483424531365025,0.975664143438785,318.0,1064.375
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,8,-17.53814850045786,17.67182598899724,3.7267125134299306,2.5281140649136438,16.914849049751048,5.99104764230558,0.0420094074462657,0.9783079254998084,317.75,1073.625
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,10,-17.049364265333274,17.721228565795407,4.197575789369707,4.128068382888457,16.815069315552037,5.567952657343584,0.0743006566501521,0.9520229133465374,319.375,1059.625
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,1,-17.0423067759086,16.62271052092338,3.236965703912896,3.684791793792214,16.295720503031173,5.490880176999356,0.0591727159190622,0.9789332842452392,318.5,1055.75
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,3,-16.78720646247698,16.33219030933547,3.5605734872654606,5.3191399690022685,15.436278773816907,5.391573897911866,0.1090894034228401,0.9412312985472696,317.625,1056.0
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,11,-16.729810267781623,17.678243497273343,4.965452171146538,5.441372564111466,17.19128009488249,5.926345208112,0.0688208397506198,0.9628691400371432,321.125,1063.25
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,9,-16.005987897702443,18.01359721223176,4.350347635196287,2.103423322287382,17.381241342437328,5.954761090365657,0.0317460950015149,0.9910162895428022,320.75,1056.0
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,5,-15.0655019515731,17.282266315729355,3.234511385182289,3.0840670513846358,16.570997474177382,5.764331674419475,0.0369190056011231,0.9963688177259126,318.75,1039.625
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,6,-14.973228807621028,11.64613963934795,7.008359343199061,2.378831016962782,10.952385387446132,4.204059307809784,0.3181592758047648,0.7305982200154151,318.625,1020.125
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,4,-14.381211227321211,14.247559350521732,6.073491591435543,2.11433394628466,13.456325462207555,5.245564613003588,0.1437997101439728,0.8906078239736216,320.0,1049.625
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,0,-14.16418865972386,15.984985215089074,5.583818951314782,2.85482447044075,15.02907419528726,5.53660532214865,0.1051618488391381,0.9210939533807184,317.5,1052.0
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,7,-11.091313153989775,13.374633728758845,7.527417765691418,2.9022895385454497,13.127048699473324,5.218440225194301,0.1728153373610883,0.8808909624490181,318.625,1057.125
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,5,-10.700708491173655,17.818386997663257,3.621209675398221,3.457679149052617,16.984878701745153,5.912093475505767,0.0621246316771554,0.96113909061517,311.375,1050.5
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,2,-9.387283710270763,17.90847183977938,3.8423872432061232,2.506753003671733,16.833326767352588,5.791210028621238,0.0356955090325579,0.9971969206046046,311.0,1044.75
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,0,-9.384604295019656,16.991314923213668,5.517526130131031,2.918292492075869,15.877156648206062,5.642047354513515,0.0911535998885356,0.9398944714672748,314.625,1041.625
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,9,-9.146760452683928,13.361978836178128,5.998855611450329,4.19690766449967,12.534429946741282,4.855071952988004,0.1995959324953679,0.8553828819087397,311.875,1033.0
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,8,-7.681953355705786,13.38871562366949,6.036078859874735,3.796146811450797,12.980767240915478,5.146197286971536,0.1602722885401866,0.8826633908140877,312.75,1040.375
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,1,-7.24048809199013,12.945384297461498,5.905454981858799,3.5017529516165675,12.054893850438123,4.899154143963459,0.1700532367494544,0.8876240908231914,312.125,1027.875
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,7,-6.527158691252573,17.764875398687995,3.723186654196924,3.328079633240848,17.20265861253461,6.071591599911823,0.0467115772846417,0.9750495178922624,312.25,1048.75
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,11,-6.256074994701271,14.0484208598123,5.95623382835997,3.978034429740765,13.176636782088114,4.787963515477258,0.1670773729796266,0.9328761262774504,314.625,1032.625
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,6,-5.935776860463793,12.615796440171543,5.5389765243623295,2.6969915525769634,12.16575396584106,4.715669827700815,0.1445865945340402,0.9166992003067178,312.5,1021.875
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,4,-5.766979359959214,17.001627178112074,6.0519081403883455,2.1380458548632464,16.182936852286993,5.560936219879195,0.0852366373314744,0.93707404665509,314.125,1046.0
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,3,-5.059354292488404,14.242006596203582,4.195986523390505,3.25046173404881,13.33542805303586,4.819398031248998,0.1255841896366192,0.9438845459238956,314.25,1019.5
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,10,-3.064095295586853,15.898748619406994,2.9884944089026204,4.907193840687844,15.004115631611922,5.387879649066256,0.0838790061691055,0.943154949734896,314.875,1035.125
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,6,-4.44415028558586,18.330161007355144,4.581796435649843,2.7358981574386227,17.494123227777976,6.084510596618268,0.0666881513218974,0.958378735737847,306.875,1047.75
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,3,-3.2798859349231755,15.665435274968342,4.41699878201584,4.586504916423129,15.021234635808565,5.169375018688031,0.1123395357531313,0.9224024618901214,309.625,1027.5
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,1,-2.4871978927177247,15.38707663305071,5.172540332702357,2.5297221126252536,14.605832342365044,5.455722530984069,0.0597194370602065,0.9702063191278296,306.25,1024.125
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,4,-1.1291323068836014,14.585142549625662,5.340924687218915,3.3468177201566824,13.904988210437107,4.951253226696736,0.1350309675467765,0.9116100165987372,308.125,1017.75
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,8,-0.7690193607170679,15.390315318461328,4.676821066497306,3.413973087469711,14.60368510179116,5.389062958892515,0.0703347473610654,0.9691239707604504,307.875,1027.875
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,7,0.2382839640917091,14.690787119927116,4.976504164928965,3.906746858230005,14.101441646125078,4.985026536103124,0.1098616373596914,0.9380150585841692,307.0,1019.375
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,9,0.2974761727228268,12.81697382895522,5.796156415071915,3.877146183440932,12.116951297152292,4.564936068202439,0.1718673178245257,0.9356177920130244,308.0,1012.0
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,11,0.553464576094346,13.871020904945691,5.566542116325763,5.172453062446881,13.432497372073986,5.166048686766004,0.1263691275258308,0.9445246176248596,308.625,1030.0
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,10,0.6830284531992774,15.014630260947047,4.593867169463786,3.618746877408656,14.236209261296066,5.375053321601009,0.0828976227010816,0.9658218867345084,312.0,1024.75
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,2,2.542272595923888,11.075565139160403,6.339080832313081,3.666387978115514,10.655486104793788,4.497559625132464,0.2323362223943251,0.8573740859193835,306.875,1010.375
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,5,3.344819280832145,10.874934887312293,5.830929209767067,5.391205095262066,10.344913009454642,4.300155141531459,0.2657488992025617,0.8893730399462637,306.875,1004.25
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,0,4.230616977763098,15.486894299737674,3.785609765931743,3.0759875927314857,14.480976241255831,5.175122300248388,0.0570196903996348,0.9772708324136048,304.375,1005.125
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,5,-3.5106480935897184,16.870477590959652,4.1139317717014166,3.4133119261257163,16.15836416907665,5.854986272958287,0.072612970937506,0.9919970924092611,307.125,1041.625
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,10,-3.2083343718583235,14.37973963278388,5.37066034811966,3.727789713094993,13.702142362062784,5.22596313329881,0.118426185653811,0.9611181999038216,306.5,1020.625
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,6,-2.5603204674354405,18.52892634214863,2.312699937430528,3.7295023837690655,17.636442322855295,5.974777161899495,0.0339136129599272,0.9865045613349211,305.75,1041.875
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,8,-2.4861003145682217,12.248237249982736,5.645508361945794,2.808764112012911,11.082701386035644,4.797561017940227,0.1809013262058711,0.8718014353710414,307.75,1020.25
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,2,-1.5320658234691766,15.229566292618973,4.539844985653749,3.4331511387350293,14.297297536246615,4.9762266209083,0.1238041431338573,0.9640836997518984,309.625,1027.125
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,9,-1.1506595732486793,9.889393101284362,7.252763957135105,3.57006759530041,9.61712427820456,4.195152053844233,0.2643870036457483,0.8304351526455914,305.875,1001.25
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,1,-0.3719378729000082,13.019093155358842,3.368662159921389,6.356886526891271,12.62480376487726,4.489257219776826,0.2160524288832797,0.8919602810755279,306.375,1009.875
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,0,1.497351113615654,11.91664768699838,5.408810413875616,3.993682774672,11.361460084260642,4.312167417773583,0.202489860393472,0.9013001628788586,307.375,981.375
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,4,1.8916380555995291,12.857317002596425,7.320708342401062,2.4562783888823003,11.847269805341996,4.731127889952954,0.2575899003114532,0.7924336545057278,308.875,1017.625
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,7,2.218930355222949,12.91833044880476,3.922874343289,4.964607410879944,12.183110898907556,4.614994773868229,0.1491551192090925,0.9218732820662352,307.125,1003.0
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,3,2.8817784978486114,16.191719295428747,3.199067547261336,2.617630132798192,15.122617569824758,5.066289776499624,0.0559335134956678,0.9873288873599896,309.25,1012.0
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,11,3.878406611665768,15.439905948571823,3.344312525897016,2.688157830589636,14.75779957302242,5.150650268021264,0.0693140177270692,0.9729564867357438,306.0,1016.125
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,10,-17.716384986200573,15.431644023792224,6.789137025819333,3.5228227005725867,14.845325564918989,5.661278444011979,0.0967167224034091,0.9316899673947732,306.375,1040.0
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,7,-17.599871029679502,17.761133990166314,4.577956253280792,2.355170486454809,17.096525613544113,5.952670618466897,0.069639561295191,0.9554112791502064,306.375,1045.0
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,5,-16.98440558225992,16.791878070658917,5.7031944414827045,4.106777953154033,15.695742431898069,5.681461339880444,0.1302200547620663,0.9144547232418988,306.375,1044.125
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,0,-16.85689682372787,17.71946896166913,3.624539249609193,3.2228640086823823,16.779058875658755,5.933174513353394,0.0455594890494227,0.9908944448634835,307.0,1045.125
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,3,-16.834448999341824,18.888697358445363,3.631117959072261,3.6648830551184632,17.868642416533618,6.261686381258841,0.032606779286187,0.9877885997408528,307.25,1041.25
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,9,-16.149087426583137,15.820655228331235,5.8141846901626,3.861321965943049,14.96351149627246,5.584005244429152,0.1053319188864016,0.9803483203108692,308.875,1038.375
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,11,-16.008432953631797,18.835897605819795,3.440385456311976,2.52968447134261,17.7925039371931,6.118028538669598,0.0308067855128767,0.9885322380070198,306.375,1036.75
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,6,-15.699831227508149,12.345244898289089,8.806623737455906,6.060019844007988,14.384605754209815,5.537139696016326,0.1244397584034859,0.9170742012773252,306.125,1035.5
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,4,-15.378155366798078,17.631493051556685,3.505700304607031,2.590203433652825,17.218229649338493,5.953120357380667,0.0492828018542509,0.985170000771262,307.625,1029.0
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,8,-14.412355068117613,17.744523927503813,3.806172051608726,3.623066722142236,16.701148091133042,5.961499443634653,0.0413545913866911,0.9772349722938752,306.375,1039.375
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,1,-13.393156353568116,16.385939344472796,3.5431772945011017,4.160654894728872,15.529517629656246,5.54196138806929,0.0711044167762761,0.9600490360025928,306.875,1026.375
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,2,-11.284869079834454,15.49473763674581,4.927893931743967,2.913199280322956,15.116125032734631,5.467447036171998,0.0990651392475821,0.9584103286754626,307.75,1022.25
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,3,-18.82591345715076,14.035873082893694,6.650223142160932,3.4578642412384992,12.908333594419029,5.235736166184938,0.2011464316701321,0.8560121196376166,306.625,1039.75
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,0,-18.61175218545789,17.72270438687714,4.358985360667646,7.051750642353489,17.552083336040997,6.422112120738745,0.0285729591191221,0.9864396397431736,309.5,1046.125
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,4,-18.396542406772905,18.94636628698637,5.221881068123931,2.3329127109820846,18.31023474151548,6.339317963773573,0.034742075140707,0.9785592795682694,307.0,1045.0
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,1,-18.2431264554286,18.608538761301023,2.860715075326688,3.505763513318502,17.689507906867522,6.393253404761403,0.0290804365996232,0.9885758723842396,305.125,1045.125
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,7,-18.0363336875302,17.20825464440758,6.683717181278305,3.409234120317365,16.237293300126154,5.837332770760311,0.1339803173687618,0.8857670381967417,308.0,1046.125
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,2,-17.95676207378669,16.511096833846494,5.687118027008287,3.7174427836527655,15.698183037625672,5.805010492961039,0.0919275856114052,0.9482678767019076,307.75,1036.75
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,9,-16.573291802901775,14.671201301136524,5.762717283925285,3.1874666639456577,14.23876488428106,5.464533146066013,0.1285452853081704,0.9167244083649478,306.75,1039.25
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,10,-16.120578032227627,16.018935903112386,5.048334491003432,6.988631252516903,16.778249974921245,5.854548972864802,0.0482315381937253,0.972875173674836,308.5,1024.75
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,8,-15.441415929717625,16.544823197235498,5.3034140776271,2.76558458670342,15.66748609854458,5.742063815493567,0.0756862515618328,0.965012274026688,306.625,1028.875
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,6,-14.255125405950782,15.194816255430064,3.3939652215365035,3.608674397810422,14.771023378916594,5.464568386191966,0.071183146939125,0.99000643157345,307.125,1021.125
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,5,-12.956304306336222,17.259743338274596,3.646700380037726,3.647535026389679,16.533392943035942,6.037146199947935,0.035661638142946,0.984907893719128,306.625,1029.875
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,2,-15.248975801515886,18.41271837160264,3.4069550427739754,4.502188492763478,17.257866523100645,5.946465064345218,0.0542867520689778,0.9777903615840484,307.875,1038.375
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,7,-14.695878314771267,16.382339801765042,5.294522478191059,4.065088002545011,16.194155651140473,5.822039620297251,0.0451747290855432,0.9796102530674834,305.5,1038.0
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,8,-14.371795877090964,16.484112951572527,5.1447743475445975,3.886458656851655,15.690759960455528,5.670205630110161,0.0923192801781624,0.9680229578977898,307.625,1038.25
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,9,-13.290474782373522,17.48782019797101,4.604632596292006,2.5264292737399163,16.91503731315304,5.8994998445151206,0.0329319190695005,0.9969973836654784,307.125,1025.25
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,6,-12.555725505372068,16.59529461267128,5.554062328700796,5.004092465457166,15.79665684107198,5.925900730370579,0.0904139928750101,0.9415829293634784,309.0,1033.75
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,5,-11.30923883033458,16.34988489767146,3.592127519605893,5.721736165478736,15.7577791708254,5.768259842762911,0.0809359564930337,0.9477237859306938,307.5,1030.625
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,1,-11.270414239067671,16.50139511341898,4.107057760500899,2.135644763324211,15.895958546154628,5.746098277661069,0.0516878746921959,0.9763720518082432,307.125,1021.875
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,10,-11.188860765205709,15.085908076767083,5.226240452466319,4.482138694827988,14.524071639698208,5.58568590848307,0.0761388115816821,0.9898955713841175,307.875,1028.75
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,4,-11.008134976790432,16.077673434239593,6.021177702266895,3.449880645744454,14.931131955178524,5.585223989954941,0.1207439150804404,0.9134151227257558,306.5,1032.25
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,11,-10.309011358799513,16.705779310825378,3.9156493164603834,5.1949002650768366,16.637242986478476,5.8836442559270665,0.0569301883984337,0.987956486373241,305.0,1028.75
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,3,-9.39491579619656,17.064843416124006,4.141743194902787,2.970329751153178,16.409008774702706,5.8994354925925565,0.0522556943461979,0.9674863705027092,307.625,1028.875
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,0,-9.294861164671287,14.88988244581757,3.689880225310119,4.234080760166855,13.854492713223287,5.207245585810735,0.0882569393788331,0.957716488236794,307.5,1007.375
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,2,-15.248975801515886,18.41271837160264,3.4069550427739754,4.502188492763478,17.257866523100645,5.946465064345218,0.0542867520689778,0.9777903615840484,307.875,1038.375
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,7,-14.695878314771267,16.382339801765042,5.294522478191059,4.065088002545011,16.194155651140473,5.822039620297251,0.0451747290855432,0.9796102530674834,305.5,1038.0
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,8,-14.371795877090964,16.484112951572527,5.1447743475445975,3.886458656851655,15.690759960455528,5.670205630110161,0.0923192801781624,0.9680229578977898,307.625,1038.25
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,9,-13.290474782373522,17.48782019797101,4.604632596292006,2.5264292737399163,16.91503731315304,5.8994998445151206,0.0329319190695005,0.9969973836654784,307.125,1025.25
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,6,-12.555725505372068,16.59529461267128,5.554062328700796,5.004092465457166,15.79665684107198,5.925900730370579,0.0904139928750101,0.9415829293634784,309.0,1033.75
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,5,-11.30923883033458,16.34988489767146,3.592127519605893,5.721736165478736,15.7577791708254,5.768259842762911,0.0809359564930337,0.9477237859306938,307.5,1030.625
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,1,-11.270414239067671,16.50139511341898,4.107057760500899,2.135644763324211,15.895958546154628,5.746098277661069,0.0516878746921959,0.9763720518082432,307.125,1021.875
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,10,-11.188860765205709,15.085908076767083,5.226240452466319,4.482138694827988,14.524071639698208,5.58568590848307,0.0761388115816821,0.9898955713841175,307.875,1028.75
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,4,-11.008134976790432,16.077673434239593,6.021177702266895,3.449880645744454,14.931131955178524,5.585223989954941,0.1207439150804404,0.9134151227257558,306.5,1032.25
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,11,-10.309011358799513,16.705779310825378,3.9156493164603834,5.1949002650768366,16.637242986478476,5.8836442559270665,0.0569301883984337,0.987956486373241,305.0,1028.75
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,3,-9.39491579619656,17.064843416124006,4.141743194902787,2.970329751153178,16.409008774702706,5.8994354925925565,0.0522556943461979,0.9674863705027092,307.625,1028.875
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,0,-9.294861164671287,14.88988244581757,3.689880225310119,4.234080760166855,13.854492713223287,5.207245585810735,0.0882569393788331,0.957716488236794,307.5,1007.375

diff --git a/analysis/fatty_acids/fatty_acid_ensemble_summaries_with_volumes.csv b/analysis/fatty_acids/fatty_acid_ensemble_summaries_with_volumes.csv
new file mode 100644
index 0000000..a8fbe4d
--- /dev/null
+++ b/analysis/fatty_acids/fatty_acid_ensemble_summaries_with_volumes.csv
@@ -0,0 +1,10 @@
+name,smiles,L_mean,L_sd,W_mean,W_sd,T_mean,T_sd,EndToEnd_mean,EndToEnd_sd,Rg_mean,Rg_sd,NPR1_mean,NPR1_sd,NPR2_mean,NPR2_sd,V_vdw_mean,V_vdw_sd,V_sas_p1p4_mean,V_sas_p1p4_sd
+S1 C18:0,CCCCCCCCCCCCCCCCCC(=O)O,13.343608302166308,0.0723475346451311,6.20923013391579,0.0330414669400413,3.386073745122957,0.0098280519020056,12.360139650025088,0.0751014234048788,4.983260420227452,0.0114669256413632,0.1891853596605855,0.002079401618849,0.8944953487531886,0.0012205106737174,324.62530893919273,0.0196488815816223,1060.5014211202863,0.0903848552754626
+S2,CCCCCCCC/C=C\CCCCCCCC(O)=O,17.991834460496474,6.567136289888665e-13,3.911490178336616,3.7919624536330253e-13,2.299929613846894,4.682745998467637e-13,17.199152818514513,5.834413034291016e-13,5.995570042049456,9.28075914248476e-15,0.0483424531365025,1.2996522867981756e-14,0.975664143438785,5.425505466827596e-15,318.0,5.130439406120865e-13,1064.375,1.8982625802647197e-11
+S3,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,17.818386997663257,5.875233854118385e-37,3.621209675398221,1.3486946804398269e-36,3.457679149052617,8.799610592679373e-37,16.984878701745153,7.906016047443427e-37,5.912093475505767,2.1535120494178614e-37,0.0621246316771554,3.008079778401965e-38,0.96113909061517,3.361160306119696e-38,311.375,2.3109970478667717e-36,1050.5,7.882104658276848e-36
+S4,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,18.330161007355144,6.753310211560498e-25,4.581796435649843,4.176526175288097e-26,2.7358981574386227,4.690059232414399e-25,17.494123227777976,6.267130450697491e-25,6.084510596618268,2.3192609912101427e-25,0.0666881513218974,1.1569594457857506e-26,0.958378735737847,9.117596403894191e-27,306.875,6.9694238532971765e-25,1047.75,5.132030291973375e-24
+S5,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,16.870477590959652,1.2804821224191048e-12,4.1139317717014166,6.460810016383143e-13,3.4133119261257163,1.616722396630635e-13,16.15836416907665,1.2627374558826422e-12,5.854986272958287,3.233792146933889e-13,0.072612970937506,2.3552458508217142e-14,0.9919970924092611,1.5874761005479634e-14,307.125,3.213109287088894e-13,1041.625,1.0796047204618684e-11
+S6,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,15.43164402399237,2.159242084494919e-05,6.789137025629355,2.049579371197203e-05,3.5228227004722656,1.0823158018152602e-05,14.845325565112407,2.0866738881792508e-05,5.661278444037015,2.7009613917972214e-06,0.0967167224010827,2.509826040784268e-07,0.9316899673968112,2.198766913835694e-07,306.37500000000006,5.684341886080803e-14,1040.0000000004295,4.634581208039786e-05
+S7,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,14.03587382334022,0.0016522412403182,6.650222681999157,0.0010268104921251,3.457864963018172,0.0016105880385238,12.9083345270487,0.0020810809878687,5.235736404451302,0.0005316704104861,0.2011463970112585,7.73382241851569e-05,0.8560121458320881,5.8450656387753454e-05,306.62500057740186,0.001288421518947,1039.7500012803262,0.0028569348483418
+S8,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,18.41271837160264,4.71392572461026e-12,3.4069550427739754,4.3823614093114186e-12,4.502188492763478,1.0148153037516662e-12,17.257866523100645,2.4696153305448888e-12,5.946465064345218,2.88878296002064e-13,0.0542867520689778,2.1155364907292233e-14,0.9777903615840484,4.22523829162176e-15,307.875,5.514032585974713e-12,1038.375,8.706367241012715e-13
+S9,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,18.41271837160264,4.71392572461026e-12,3.4069550427739754,4.3823614093114186e-12,4.502188492763478,1.0148153037516662e-12,17.257866523100645,2.4696153305448888e-12,5.946465064345218,2.88878296002064e-13,0.0542867520689778,2.1155364907292233e-14,0.9777903615840484,4.22523829162176e-15,307.875,5.514032585974713e-12,1038.375,8.706367241012715e-13

diff --git a/analysis/fatty_acids/FA_boltzmann_summaries.csv b/analysis/fatty_acids/FA_boltzmann_summaries.csv
new file mode 100644
index 0000000..b46689f
--- /dev/null
+++ b/analysis/fatty_acids/FA_boltzmann_summaries.csv
@@ -0,0 +1,10 @@
+FA,SMILES,n_conformers,L_mean,L_sd,W_mean,W_sd,T_mean,T_sd,EndToEnd_mean,EndToEnd_sd,Rg_mean,Rg_sd,NPR1_mean,NPR1_sd,NPR2_mean,NPR2_sd,V_vdw_mean,V_vdw_sd,V_sas_p1p4_mean,V_sas_p1p4_sd
+Stearic,CCCCCCCCCCCCCCCCCC(=O)O,8,15.243243590264534,1.6480625073951376e-22,6.232409654019753,1.6463143047659077e-22,3.0113124536141624,1.980387064118912e-22,14.228732424685708,2.1500669447573577e-22,5.30564904319159,7.617523395948198e-23,0.12775057775588577,7.25455917889559e-24,0.9009776907469123,8.091256080260449e-24,325.0799999999999,3.4583370111810914e-23,1066.3919999999998,8.300008825546511e-22
+Oleic,CCCCCCCC/C=C\CCCCCCCC(O)=O,8,17.43400529212532,4.380317967740876e-28,4.062705964284365,2.8318016033225107e-28,3.431549631793878,2.3928872793604087e-28,16.73087940315224,4.11677019343113e-28,5.830336096271731,1.1339009926366803e-28,0.0679640072100756,1.1714668785662768e-29,0.9835372569434098,1.1707317325858863e-29,320.544,2.547016797653258e-28,1075.464,6.934205573005983e-27
+Linoleic,CCCCC/C=C\C/C=C\CCCCCCCC(=O)O,8,17.45745272567102,3.831454789279828e-103,5.164129283289379,1.9594260654055196e-103,3.160095892193181,7.263148112311028e-104,16.439337111328914,4.316132790910545e-103,5.782796046343944,1.2634635101292143e-103,0.07012968757504097,5.358298453640035e-105,0.9723758779950019,7.261837886280508e-106,315.14399999999995,6.338570093881435e-103,1049.5439999999999,1.3944854206637132e-102
+Î±-Linolenic,CC/C=C\C/C=C\C/C=C\CCCCCCCC(=O)O,8,17.92890058449633,5.577507541246813e-43,3.05092034158109,2.2132531726934855e-43,2.5172583782634463,1.0283349424924527e-43,16.871812037159454,5.752025934385685e-43,5.839171547583584,1.1709491478242566e-43,0.02789876842030661,1.0799758960757085e-44,0.9959130876165913,5.321165312705002e-45,310.39199999999994,6.003741631494567e-43,1036.8,3.1914626567418817e-42
+Î³-Linolenic,CCCCC/C=C\C/C=C\C/C=C\CCCCC(=O)O,8,15.640093836958084,3.968812013835174e-63,3.791496841592677,2.3615880895661573e-63,4.112399886363129,5.942024291327437e-63,14.876137447894967,6.319580886214863e-63,5.057041054063389,7.360974840835766e-63,0.11326792784287337,7.782843523993653e-64,0.9987484889235048,9.395130042446758e-65,307.15199999999993,7.997413872751723e-63,1032.0479999999998,1.866063236975262e-62
+Î±-Eleostearic,CCCC/C=C/C=C/C=C\CCCCCCCC(O)=O,8,18.64754273345753,0.5773062392258411,3.4843962019718546,0.486073339671072,2.4745611961690326,0.602368827795916,17.49121819833102,0.3209263992236542,6.091578494916158,0.055806805106076544,0.03508454056484651,0.004871486777972181,0.9820286526066143,0.0039297179670150706,308.7742215802763,0.7264621464420975,1038.7336353192065,3.3901571493247866
+Î²-Eleostearic,CCCC/C=C/C=C/C=C/CCCCCCCC(O)=O,8,18.77453429631091,3.1726426934097006e-09,3.8759332412766465,3.673904139606919e-09,3.137983150630597,3.5480478810653892e-09,17.534638404379244,3.497408454023216e-09,6.312998742573384,9.538939943742337e-10,0.05360315633582217,1.0541048727232497e-10,0.9730624100202566,5.7831216060129264e-11,309.52799999999996,8.292467581278111e-09,1051.4879999999998,1.7222817284193364e-08
+Punicic,CCCC/C=C\C=C\C=C/CCCCCCCC(O)=O,8,9.436289000568548,0.00015233031619382844,7.3828152447985085,1.620686926696127e-05,3.9633683086377065,3.359266174701622e-05,8.789333378875762,0.00014665915518331083,4.265863797163565,3.480002055030456e-05,0.39435494551667116,7.025537996972518e-06,0.7267107240635788,4.81374191408292e-06,307.79999999983386,5.989848726059584e-06,1037.664000002325,8.385788216483418e-05
+ODPA,CC/C=C\C/C=C\C/C=C\C/C=C\C/C=C\CC(O)=O,8,17.670649821946466,0.9550624630387833,3.174465314834671,1.014783023907784,2.266659666634692,0.008025577478579887,17.06656625824252,1.1607752240398546,5.917460568732606,0.285455378206296,0.03381718091832718,0.01898663455772438,0.9846726122606744,0.010446327588942388,296.8879348187095,0.9983446044595642,1018.2096366655703,8.349791237298286

diff --git a/docs/FA-geometry-method.md b/docs/FA-geometry-method.md
new file mode 100644
index 0000000..5b484bf
--- /dev/null
+++ b/docs/FA-geometry-method.md
@@ -0,0 +1,19 @@
+# Ensemble-Based Size and Volume Comparison of C18 Fatty Acids
+
+**Date:** 2025-10-23
+
+## What this includes
+- RDKit ensemble workflow (ETKDGv3 + MMFF94)
+- Per-conformer geometry: L/W/T, End-to-end, Rg, NPR1/NPR2
+- Approximate volumes: VDW union and SAS (probe 1.4 Ã…) via voxel grid
+- Boltzmann-weighted means Â± SD at 298 K
+
+## Key parameters
+- Conformers per molecule (default 12 in the example script)
+- MMFF94 minimization (100 steps)
+- Voxel grid spacing 0.5 Ã… (finer = slower, more accurate)
+- SAS probe 1.4 Ã…
+
+## Notes
+- SAS via inflated radii reflects solvent-accessible volume; SES requires surface tools (ChimeraX/VMD VolArea).
+- Protonation neutral acids; stereo from SMILES.

diff --git a/docs/FA-geometry-method-csv.md b/docs/FA-geometry-method-csv.md
new file mode 100644
index 0000000..6f8edf5
--- /dev/null
+++ b/docs/FA-geometry-method-csv.md
@@ -0,0 +1,34 @@
+# FA Geometry â€” Ensemble Summaries from CSV
+**Date:** 2025-10-23
+
+This document describes the workflow for computing **Boltzmann-weighted** size and volume metrics directly from an input CSV mapping fatty-acid names to SMILES.
+
+## Input
+- File: `FA SMILES.csv` with columns **FA** (fatty-acid name) and **SMILES** (isomeric SMILES).
+- Output summaries include the **FA** and **SMILES** columns.
+
+## Ensemble generation
+- RDKit **ETKDGv3** for 3D conformers, then **MMFF94** minimization (100 steps).
+- Conformer count chosen adaptively for speed; the output reports `n_conformers` per molecule.
+- Boltzmann weights at **298 K** from MMFF energies:  
+  \( w_i \propto e^{-(E_i - E_\text{min})/(k_B T)} \), normalized.
+
+## Per-conformer measurements
+- **Principal-axis extents (L, W, T)** [Ã…]: project heavy atoms onto principal inertia axes; take maxâ€“min along each axis.
+- **End-to-end** [Ã…]: carbonyl (sp2 C=O) carbon to farthest terminal carbon.
+- **Radius of gyration (Rg)** [Ã…]: mass-weighted RMS distance to center of mass (includes H).
+- **Shape (NPR1, NPR2)** from principal moments (I1 â‰¤ I2 â‰¤ I3): NPR1 = I1/I3, NPR2 = I2/I3.
+
+## Volumes
+- **VDW volume** [Ã…Â³]: union-of-spheres of RDKit periodic-table van der Waals radii via a voxel grid.
+- **SAS volume (probe 1.4 Ã…)** [Ã…Â³]: same union with each radius inflated by 1.4 Ã… (solvent-accessible).  
+  *Note:* This is not the exact solvent-excluded (SES) volume; SES is typically smaller.
+
+**Numerics:** voxel grid spacing **0.6 Ã…** in this run (trade-off between speed and accuracy).
+
+## Output
+- `analysis/fatty_acids/FA_boltzmann_summaries.csv` â€” Boltzmann-weighted **means Â± SD** for: L, W, T, EndToEnd, Rg, NPR1, NPR2, V_vdw, V_sas_p1p4; plus **FA**, **SMILES**, and **n_conformers**.
+
+## Reproducibility & notes
+- Protonation: neutral acids. Stereo/unsaturation taken from SMILES.
+- Increase conformers or reduce grid spacing for higher fidelity; consider SES via ChimeraX (`measure` on SES) or VMD VolArea if needed.

diff --git a/README_FA_geometry.txt b/README_FA_geometry.txt
new file mode 100644
index 0000000..c45bb1b
--- /dev/null
+++ b/README_FA_geometry.txt
@@ -0,0 +1,30 @@
+FA Geometry â€” Ensemble Summaries from CSV
+==========================================
+
+This folder contains Boltzmann-weighted geometric and volume summaries computed from an input CSV that maps fatty-acid names to SMILES.
+
+Files
+-----
+- FA_boltzmann_summaries.csv
+  Boltzmann-weighted means and SDs for: L, W, T, EndToEnd, Rg, NPR1, NPR2, V_vdw (VDW union volume), V_sas_p1p4 (SAS volume with 1.4 Ã… probe).
+  Includes 'FA' and 'SMILES' columns and 'n_conformers' used per molecule.
+
+Re-run instructions (locally)
+-----------------------------
+1) Create/activate an environment with RDKit, NumPy, Pandas (e.g., conda-forge):
+   conda create -n fa-geom -c conda-forge rdkit numpy pandas python=3.11
+   conda activate fa-geom
+
+2) Use the script 'fa_volume_compare.py' as a template, or adapt it to read your CSV.
+   Key knobs: n_conf (per molecule), voxel grid spacing (default 0.6 Ã…), SAS probe (1.4 Ã…).
+
+Notes
+-----
+- SAS volume here uses radius inflation (accessible volume). For SES (solvent-excluded) volume, post-process with ChimeraX or VMD VolArea.
+- Results depend on SMILES stereo (cis/trans), protonation (neutral acids), and temperature (298 K).
+
+Generated
+---------
+- Date: 2025-10-23
+- Conformers per molecule in this run: 8
+- Input rows: 9
